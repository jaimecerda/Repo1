/*
Ento-to-End Traceability Report
2023-05-01
Author: Jaime Cerda

PURPOSE:
To have a report showing the paths from an origin element all the way to a destination element.  
Discover the indirect relationships between the origin and destination without the need to explicitly link these.
Have a way of observing the paths that implement such indirect relationships.
See the indirect relationships in form of matrix.

RULES:
-Need to delcare the origin and destination in the CONFIGURABLE PARAMETERS section.
-In order to prevent circular references the script has these rules:
    -The script treats the Archimate framework layers as a hierarchy, so the recursive loop will prevent a lower layer element to go search into an upper layer element.  Motivation layer is treated same as the Strategy layer (top-most layers).  Grouping and Location are ignored and will be recursively searched.
    -The script prevents searching into "parent" elements.  Example: Once it goes into a Process, then into a Function, it will prevent going back to another Process.  Relationships that are considered to define "parent-child" relationships are:
        --specialization-relationship
        --composition-relationship
        --assignment-relationship
        --aggregation-relationship
        --influence-relationship
-The recursive loop that generates the paths from origin to destination searches for the existence of relationships, it DOESN'T follow archimate rules as to what constitutes a valid relationship, the modelling tool should take care of this.
-On the same note, the indirect relationship, is just declared as a plain relationship, it DOESN'T infer a derived relationship as established in Archimate specification.
-In the relationship matrix the origin element will be treated as rows and the destination element will be treated as columns.
*/


//==========================CONFIGURABLE PARAMETERS=========================
var _sourceNode = "requirement";  //configurable parameter for starting element type.
var _targetNode = "artifact";  //configurable parameter for target element type.
var _propertyFilter="";  //optional configurable parameter for filtering _sourceNode's that match given value.  Property value in Archi element should be set to "yes" in order to get a match.
var _matchingPaths = [];  //empty list to store the matching paths.
var _deepLevelLimit = 15;  //number of levels to go deep in recursiveness, after which search will be truncated (to prevent unresponsiveness).
var _verboseLogs=false;     //If you want to analyze the script's actions in more detail, set this to "true".
var _showHTMLInLog=false;    //If you want a dump of the resulting HTML in the log, set this to "true".
var _openInInternalBrowser=false;   //If you want the HTML to show in Archi's internal browser set this to "true".  NOTE: In Windows, the HTML doesn't seem to work.

//==========================GLOBAL VARIABLES=========================
//variables to store standard archimate elements
var _motivationElements=["stakeholder","driver","assessment","goal","outcome","principle","requirement","constraint","meaning","value"];
var _strategyElements=["resource","capability","course-of-action","value-stream"];
var _businessElements=["business-actor","business-role","business-collaboration","business-interface","business-process","business-function","business-interaction","business-event","business-service","business-object","contract","representation","product"];
var _applicationElements=["application-component","application-collaboration","application-interface","application-function","application-process","application-interaction","application-event","application-service","data-object"];
var _technologyElements=["node","device","system-software","technology-collaboration","technology-interface","path","communication-network","technology-function","technology-process","technology-interaction","technology-event","technology-service","artifact"];
var _physicalElements=["equipment","facility","distribution-network","material"];
var _impAndMigElements=["work-package","deliverable","implementation-event","plateau","gap"];

var _matrix //The matrix to store the relationship matrix

//variable to store the archimate figures
var _archimateFigures=[
    //Strategy
    {elementType:"resource",elementFigure:"<svg width='35' height='22'><g transform='translate(2,0)'><path d='M 7.65 10.42 L 7.65 14.45 M 5.25 10.42 L 5.25 14.45 M 2.85 10.42 L 2.85 14.45 M 13.65 11.2 C 13.95 11.07 14.25 11.07 14.55 11.2 C 14.85 11.2 15 11.33 15 11.59 C 15 12.24 15 12.76 15 13.41 C 15 13.54 14.85 13.67 14.7 13.8 C 14.4 13.8 13.95 13.8 13.65 13.8 M 0 15.49 C 0 13.8 0 11.59 0 9.51 C 0 9.12 0.45 8.73 1.2 8.73 C 4.95 8.6 9.15 8.6 12.6 8.73 C 13.2 8.86 13.35 9.12 13.5 9.38 C 13.65 11.33 13.65 13.41 13.5 15.36 C 13.5 15.62 13.2 16.14 12.45 16.27 C 8.55 16.27 4.8 16.27 0.9 16.27 C 0.3 16.14 0 15.88 0 15.49 Z' fill='#f5deaa' stroke='rgb(0, 0, 0)' stroke-miterlimit='10' pointer-events='all'/></g></svg>"},
    {elementType:"capability",elementFigure:"<svg width='35' height='22'><g transform='translate(8,0)'><path d='M 9 5 L 9 20 L -6 20 L -6 15.05 L -1.05 15.05 L -1.05 9.95 L 3.05 9.95 L 3.05 5 Z M 3.05 9.95 L 9 9.95 M -1.05 15.05 L 9 15.05 M -1.05 15.05 L -1.05 20 M 3.05 9.95 L 3.05 20' stroke='rgb(0, 0, 0)' fill='#f5deaa' stroke-miterlimit='10' pointer-events='all'/></g></svg>"},
    {elementType:"course-of-action",elementFigure:"<svg width='35' height='22'><g transform='translate(0,2)'><path d='M 0 15 C 0.95 11.99 3.21 9.56 6.15 8.4 M 2.1 8.1 L 6.15 8.4 L 4.5 11.7' fill='#f5deaa' stroke='rgb(0, 0, 0)' stroke-miterlimit='10' pointer-events='all'/><ellipse cx='10.5' cy='4.5' rx='4.5' ry='4.5' fill='#f5deaa' stroke='rgb(0, 0, 0)' pointer-events='all'/><ellipse cx='10.5' cy='4.5' rx='3' ry='3' fill='#f5deaa' stroke='rgb(0, 0, 0)' pointer-events='all'/><ellipse cx='10.5' cy='4.5' rx='1.5' ry='1.5' fill='#000000' stroke='none' pointer-events='all'/></g></svg>"},
    {elementType:"value-stream",elementFigure:"<svg width='35' height='22'><g transform='translate(16,09)'><path d='M 5.25 0.75 L 13.5 4.75 L 13.5 20.75 L 5.25 16.75 L -2.5 20.75 L -2.5 4.75 Z' fill='#f5deaa' stroke='rgb(0, 0, 0)' stroke-miterlimit='10' transform='rotate(90,5.25,0.75)' pointer-events='all'/></g></svg>"},

    //Business
    {elementType:"business-actor",elementFigure:"<svg width='35' height='22'><g><ellipse cx='9' cy='5.25' rx='2.6999999999999997' ry='2.25' fill='#ffff99' stroke='rgb(0, 0, 0)' pointer-events='all' /><path d='M 9 7.5 L 9 14.25 M 4.5 9 L 13.5 9 M 4.5 17 L 9 13.25 L 13.5 17' fill='none' stroke='rgb(0, 0, 0)' stroke-miterlimit='10' pointer-events='all' /></g></svg>"},
    {elementType:"business-role",elementFigure:"<svg width='35' height='22'><g transform='translate(5,0)'><path d='M 9 5 L 0 5 C -1.66 5 -3 6.57 -3 8.5 C -3 10.43 -1.66 12 0 12 L 9 12' fill='#ffff99' stroke='rgb(0, 0, 0)' stroke-miterlimit='10' pointer-events='all'/><ellipse cx='9' cy='8.5' rx='3' ry='3.5' fill='#ffff99' stroke='rgb(0, 0, 0)' pointer-events='all'/></g></svg>"},
    {elementType:"business-collaboration",elementFigure:"<svg width='35' height='22'><g><ellipse cx='9' cy='5.5' rx='4.5' ry='4.5' fill='#ffff99' stroke='rgb(0, 0, 0)' pointer-events='all' /><ellipse cx='15' cy='5.5' rx='4.5' ry='4.5' fill='#ffff99' stroke='rgb(0, 0, 0)' pointer-events='all' /></g></svg>"},
    {elementType:"business-interface",elementFigure:"<svg width='35' height='22'><g><ellipse cx='11.25' cy='7.5' rx='3.75' ry='3.5' fill='#ffff99' stroke='rgb(0, 0, 0)' pointer-events='all' /><path d='M 0 7.5 L 7.5 7.5' fill='none' stroke='rgb(0, 0, 0)' stroke-miterlimit='10' pointer-events='all' /></g></svg>"},
    {elementType:"business-process",elementFigure:"<svg width='35' height='22'><g transform='translate(2, 0)'><path d='M 0 5.7 L 9 5.7 L 9 3 L 15 7.5 L 9 12 L 9 9.3 L 0 9.3 Z' fill='#ffff99' stroke='rgb(0, 0, 0)' stroke-miterlimit='10' pointer-events='all' /></g></svg>"},
    {elementType:"business-function",elementFigure:"<svg width='35' height='22'><g><path d='M 9.5 0 L 17 3 L 17 15 L 9.5 12 L 2 15 L 2 3 Z' fill='#ffff99' stroke='rgb(0, 0, 0)' stroke-miterlimit='10' pointer-events='all'/></g></svg>"},
    {elementType:"business-interaction",elementFigure:"<svg width='35' height='22'><g transform='translate(2,1)'><path d='M 9.25 0 C 12.98 0 16 3.36 16 7.5 C 16 11.64 12.98 15 9.25 15 Z M 7.75 0 C 4.02 0 1 3.36 1 7.5 C 1 11.64 4.02 15 7.75 15 Z' fill='#ffff99' stroke='rgb(0, 0, 0)' stroke-miterlimit='10' pointer-events='all' /></g></svg>"},
    {elementType:"business-event",elementFigure:"<svg width='35' height='22'><g transform='translate(4,0)'><path d='M 9 3 C 11.49 3 13.5 5.01 13.5 7.5 C 13.5 9.99 11.49 12 9 12 L -1.5 12 L 3 7.5 L -1.5 3 Z' fill='#ffff99' stroke='rgb(0, 0, 0)' stroke-miterlimit='10' pointer-events='all' /></g></svg>"},
    {elementType:"business-service",elementFigure:"<svg width='35' height='22'><g transform='translate(2,0)'><path d='M 9 5 C 11.49 5 13.5 7.01 13.5 9.5 C 13.5 11.99 11.49 14 9 14 L 3 14 C 0.51 14 -1.5 11.99 -1.5 9.5 C -1.5 7.01 0.51 5 3 5 Z' fill='#ffff99' stroke='rgb(0, 0, 0)' stroke-miterlimit='10' pointer-events='all'/></g></svg>"},
    {elementType:"business-object",elementFigure:"<svg width='35' height='22'><rect x='0' y='0' width='22' height='18' fill='#ffff99' stroke='rgb(0, 0, 0)' pointer-events='all' /><path d='M 0 5 L 22 5.1' fill='none' stroke='rgb(0, 0, 0)' stroke-miterlimit='10' pointer-events='all' /></svg>"},
    {elementType:"contract",elementFigure:"<svg width='35' height='22'><g><rect x='0' y='0' width='22' height='18' fill='#ffff99' stroke='rgb(0, 0, 0)' pointer-events='all'/><path d='M 0 4 L 22 4' fill='none' stroke='rgb(0, 0, 0)' stroke-miterlimit='10' pointer-events='all'/><path d='M 0 14 L 22 14' fill='none' stroke='rgb(0, 0, 0)' stroke-miterlimit='10' pointer-events='all'/></g></svg>"},
    {elementType:"representation",elementFigure:"<svg width='35' height='22'><g transform='scale(.13,.18)'><path d='M 0 0 L 150 0 L 150 76.5 C 140.13 70.45 126.61 67.05 112.5 67.05 C 98.39 67.05 84.87 70.45 75 76.5 C 65.13 82.55 51.61 85.95 37.5 85.95 C 23.39 85.95 9.87 82.55 0 76.5 Z' fill='#ffff99' stroke='rgb(0, 0, 0)' stroke-miterlimit='10' pointer-events='all'/><path d='M 0 15 L 150 15' fill='none' stroke='rgb(0, 0, 0)' stroke-miterlimit='10' pointer-events='all'/></g></svg>"},
    {elementType:"product",elementFigure:"<svg width='35' height='22'><g transform='scale(.15,.23)'><rect x='0' y='0' width='150' height='75' fill='#ffff99' stroke='rgb(0, 0, 0)' pointer-events='all'/><path d='M 0 15 L 90 15 L 90 0' fill='none' stroke='rgb(0, 0, 0)' stroke-miterlimit='10' pointer-events='all'/></g></svg>"},

    //Application
    {elementType:"application-component",elementFigure:"<svg width='35' height='22'><g><rect x='4.25' y='5' width='9.75' height='15' fill='#99ffff' stroke='rgb(0, 0, 0)' pointer-events='all'/><rect x='1' y='8.75' width='6.5' height='2.25' fill='#99ffff' stroke='rgb(0, 0, 0)' pointer-events='all'/><rect x='1' y='14' width='6.5' height='2.25' fill='#99ffff' stroke='rgb(0, 0, 0)' pointer-events='all'/></g></svg>"},
    {elementType:"application-collaboration",elementFigure:"<svg width='35' height='22'><g><ellipse cx='8.5' cy='12.5' rx='4.5' ry='4.5' fill='#99ffff' stroke='rgb(0, 0, 0)' pointer-events='all'/><ellipse cx='15.5' cy='12.5' rx='4.5' ry='4.5' fill='#99ffff' stroke='rgb(0, 0, 0)' pointer-events='all'/></g></svg>"},
    {elementType:"application-interface",elementFigure:"<svg width='35' height='22'><g><ellipse cx='11' cy='5' rx='3.75' ry='3.5' fill='#99ffff' stroke='rgb(0, 0, 0)' pointer-events='all' /><path d='M 0 5 L 7.5 5' fill='none' stroke='rgb(0, 0, 0)' stroke-miterlimit='10' pointer-events='all' /></g></svg>"},
    {elementType:"application-function",elementFigure:"<svg width='35' height='22'><g transform='translate(10, 5)'><path d='M 0 0 L 7.5 3 L 7.5 15 L 0 12 L -7.5 15 L -7.5 3 Z' fill='#99ffff' stroke='rgb(0, 0, 0)' stroke-miterlimit='10' pointer-events='all'/></g></svg>"},
    {elementType:"application-process",elementFigure:"<svg width='35' height='22'><g><path d='M 9 5.7 L 18 5.7 L 18 3 L 24 7.5 L 18 12 L 18 9.3 L 9 9.3 Z' fill='#99ffff' stroke='rgb(0, 0, 0)' stroke-miterlimit='10' pointer-events='all'/></g></svg>"},
    {elementType:"application-interaction",elementFigure:"<svg width='35' height='22'><g transform='translate(15, 5)'><path d='M -2.75 0 C 1.98 0 5 3.36 5 7.5 C 5 11.64 1.98 15  -2.75 15 Z M -4.25 0 C -8.98 0 -12 3.36 -12 7.5 C -12 11.64 -8.98 15 -4.25 15 Z' fill='#99ffff' stroke='rgb(0, 0, 0)' stroke-miterlimit='10' pointer-events='all'/></g></svg>"},
    {elementType:"application-event",elementFigure:"<svg width='35' height='22'><g><path d='M 20.5 8 C 22.99 8 25 10.01 25 12.5 C 25 14.99 22.99 17 20.5 17 L 9 17 L 14.5 12.5 L 9 8 Z' fill='#99ffff' stroke='rgb(0, 0, 0)' stroke-miterlimit='10' pointer-events='all'/></g></svg>"},
    {elementType:"application-service",elementFigure:"<svg width='35' height='22'><g transform='translate(4,0)'><path d='M 9.5 3 C 11.99 3 14 5.01 14 7.5 C 14 9.99 11.99 12 9.5 12 L 3.5 12 C 1.01 12 -1.09 9.99 -1.09 7.5 C -1.09 5.01 1.01 3 3.5 3 Z' fill='#99ffff' stroke='rgb(0, 0, 0)' stroke-miterlimit='10' pointer-events='all' /></g></svg>"},
    {elementType:"data-object",elementFigure:"<svg width='35' height='22'><rect x='0' y='0' width='22' height='18' fill='#99ffff' stroke='rgb(0, 0, 0)' pointer-events='all' /><path d='M 0 5 L 22 5.1' fill='none' stroke='rgb(0, 0, 0)' stroke-miterlimit='10' pointer-events='all' /></svg>"},

    //Technology
    {elementType:"node",elementFigure:"<svg width='35' height='22'><g transform='translate(1,1)'><path d='M 0 3.75 L 3.75 0 L 15 0 L 15 11.25 L 11.25 15 L 0 15 Z M 0 3.75 L 11.25 3.75 L 11.25 15 M 15 0 L 11.25 3.75' fill='#afffaf' stroke='rgb(0, 0, 0)' stroke-miterlimit='10' pointer-events='all'/></g></svg>"},
    {elementType:"device",elementFigure:"<svg width='35' height='22'><g transform='translate(1,-7)'><rect x='0' y='10' width='15' height='13.2' rx='1.5' ry='1.5' fill='#afffaf' stroke='rgb(0, 0, 0)' pointer-events='all'/><path d='M 1.5 23.2 L 0 25 L 15 25 L 13.5 23.2' fill='#afffaf' stroke='rgb(0, 0, 0)' stroke-miterlimit='10' pointer-events='all'/></g></svg>"},
    {elementType:"system-software",elementFigure:"<svg width='35' height='22'><g transform='translate(2,0)'><ellipse cx='9.75' cy='10.25' rx='5.25' ry='5.25' fill='none' stroke='rgb(0, 0, 0)' pointer-events='all'/><ellipse cx='7.35' cy='12.65' rx='7.35' ry='7.35' fill='#afffaf' stroke='rgb(0, 0, 0)' pointer-events='all'/></g></svg>"},
    {elementType:"technology-collaboration",elementFigure:"<svg width='35' height='22'><g><ellipse cx='6.5' cy='7.5' rx='4.5' ry='4.5' fill='#afffaf' stroke='rgb(0, 0, 0)' pointer-events='all'/><ellipse cx='12.5' cy='7.5' rx='4.5' ry='4.5' fill='#afffaf' stroke='rgb(0, 0, 0)' pointer-events='all'/></g></svg>"},
    {elementType:"technology-interface",elementFigure:"<svg width='35' height='22'><g><ellipse cx='13.25' cy='12.5' rx='3.75' ry='3.5' fill='#afffaf' stroke='rgb(0, 0, 0)' pointer-events='all'/><path d='M 2 12.5 L 9.5 12.5' fill='none' stroke='rgb(0, 0, 0)' stroke-miterlimit='10' pointer-events='all'/></g></svg>"},
    {elementType:"path",elementFigure:"<svg width='35' height='22'><g><path d='M 3 10 L 0 7.5 L 3 5 M 12 10 L 15 7.5 L 12 5' fill='none' stroke='rgb(0, 0, 0)' stroke-miterlimit='10' pointer-events='all'/><path d='M 0 7.5 L 15 7.5' fill='none' stroke='rgb(0, 0, 0)' stroke-miterlimit='10' stroke-dasharray='3 3' pointer-events='all'/></g></svg>"},
    {elementType:"communication-network",elementFigure:"<svg width='35' height='22'><g><path d='M 9 5 L 15.75 5 L 12 11.6 L 5.25 11.6 Z' fill='#afffaf' stroke='rgb(0, 0, 0)' stroke-miterlimit='10' pointer-events='all'/><ellipse cx='9' cy='5' rx='2.25' ry='2.2' fill='rgb(0, 0, 0)' stroke='none' pointer-events='all'/><ellipse cx='15.75' cy='5' rx='2.25' ry='2.2' fill='rgb(0, 0, 0)' stroke='none' pointer-events='all'/><ellipse cx='5.25' cy='11.6' rx='2.25' ry='2.2' fill='rgb(0, 0, 0)' stroke='none' pointer-events='all'/><ellipse cx='12' cy='11.6' rx='2.25' ry='2.2' fill='rgb(0, 0, 0)' stroke='none' pointer-events='all'/></g></svg>"},
    {elementType:"technology-function",elementFigure:"<svg width='35' height='22'><g><path d='M 9.5 5 L 17 8 L 17 20 L 9.5 17 L 2 20 L 2 8 Z' fill='#afffaf' stroke='rgb(0, 0, 0)' stroke-miterlimit='10' pointer-events='all'/></g></svg>"},
    {elementType:"technology-process",elementFigure:"<svg width='35' height='22'><g><path d='M 2 10.7 L 11 10.7 L 11 8 L 17 12.5 L 11 17 L 11 14.3 L 2 14.3 Z' fill='#afffaf' stroke='rgb(0, 0, 0)' stroke-miterlimit='10' pointer-events='all'/></g></svg>"},
    {elementType:"technology-interaction",elementFigure:"<svg width='35' height='22'><g><path d='M 10.25 5 C 13.98 5 17 8.36 17 12.5 C 17 16.64 13.98 20 10.25 20 Z M 8.75 5 C 5.02 5 2 8.36 2 12.5 C 2 16.64 5.02 20 8.75 20 Z' fill='#afffaf' stroke='rgb(0, 0, 0)' stroke-miterlimit='10' pointer-events='all'/></g></svg>"},
    {elementType:"technology-event",elementFigure:"<svg width='35' height='22'><g><path d='M 12.5 8 C 14.99 8 17 10.01 17 12.5 C 17 14.99 14.99 17 12.5 17 L 2 17 L 6.5 12.5 L 2 8 Z' fill='#afffaf' stroke='rgb(0, 0, 0)' stroke-miterlimit='10' pointer-events='all'/></g></svg>"},
    {elementType:"technology-service",elementFigure:"<svg width='35' height='22'><g><path d='M 12.5 8 C 14.99 8 17 10.01 17 12.5 C 17 14.99 14.99 17 12.5 17 L 6.5 17 C 4.01 17 2 14.99 2 12.5 C 2 10.01 4.01 8 6.5 8 Z' fill='#afffaf' stroke='rgb(0, 0, 0)' stroke-miterlimit='10' pointer-events='all'/></g></svg>"},
    {elementType:"artifact",elementFigure:"<svg width='35' height='22'><g><path d='M 9 0 L 16.7 0 L 20 3.3 L 20 15 L 9 15 Z M 16.7 0 L 16.7 3.3 L 20 3.3' stroke='rgb(0, 0, 0)' stroke-miterlimit='10' pointer-events='all' fill='#afffaf'/></g></svg>"},

    //Physical
    {elementType:"equipment",elementFigure:"<svg width='35' height='22'><g transform='translate(11,-7)'><path d='M 0.8 15.7 C 1.7 15.7 2.75 15.1 2.75 13.9 C 2.75 12.7 1.7 12.1 0.95 12.1 C -0.4 12.1 -1.15 13 -1.15 13.9 C -1.15 14.95 -0.25 15.7 0.8 15.7 Z M 0.2 17.8 L 0.05 16.75 L -0.85 16.45 L -1.6 17.2 L -2.5 16.3 L -1.9 15.4 L -2.2 14.65 L -3.25 14.65 L -3.25 13.3 L -2.2 13.15 L -1.9 12.4 L -2.5 11.65 L -1.6 10.75 L -0.7 11.35 L 0.05 11.05 L 0.2 10 L 1.55 10 L 1.7 11.05 L 2.45 11.35 L 3.35 10.75 L 4.25 11.65 L 3.65 12.4 L 3.95 13.15 L 5 13.3 L 5 14.65 L 3.95 14.65 L 3.65 15.4 L 4.25 16.15 L 3.35 17.05 L 2.45 16.45 L 1.7 16.75 L 1.55 17.8 L 0.2 17.8 Z M -4.6 22.15 C -3.4 22.15 -2.2 21.25 -2.2 20.05 C -2.2 18.85 -3.25 17.65 -4.75 17.65 C -5.95 17.65 -7.15 18.7 -7.15 20.05 C -7.15 21.1 -5.95 22.3 -4.6 22.15 Z M -6.85 24.7 L -6.7 23.35 L -7.6 22.75 L -8.8 23.2 L -9.7 21.85 L -8.65 21.1 L -8.8 20.05 L -10 19.45 L -9.55 17.95 L -8.2 18.1 L -7.6 17.2 L -8.05 16 L -6.7 15.25 L -5.8 16.3 L -4.6 16.15 L -4.15 14.95 L -2.5 15.4 L -2.65 16.75 L -1.75 17.35 L -0.55 16.75 L 0.35 18.1 L -0.7 19 L -0.55 20.05 L 0.65 20.5 L 0.2 22 L -1.15 21.85 L -1.75 22.75 L -1.15 21.85 L -1.75 22.75 L -1.15 23.95 L -2.65 24.7 L -3.55 23.65 L -4.6 23.8 L -5.2 25 L -6.85 24.7 Z' fill='#afffaf' stroke='rgb(0, 0, 0)' stroke-miterlimit='10' pointer-events='all'/></g></svg>"},
    {elementType:"facility",elementFigure:"<svg width='35' height='22'><g transform='translate(11,-8)'><path d='M -10 25 L -10 10 L -8.05 10 L -8.05 20.5 L -2.7 18.25 L -2.7 20.5 L 1.65 18.25 L 1.65 20.5 L 6 18.25 L 6 25 Z' fill='#afffaf' stroke='rgb(0, 0, 0)' stroke-miterlimit='10' pointer-events='all'/></g></svg>"},
    {elementType:"material",elementFigure:"<svg width='35' height='22'><g transform='translate(-130,0)'><path d='M 130 12.5 L 133.75 6 L 141.25 6 L 145 12.5 L 141.25 19 L 133.75 19 Z M 132.25 12.5 L 134.65 8.6 M 140.35 8.6 L 142.75 12.5 M 140.2 16.4 L 134.8 16.4' fill='#afffaf' stroke='rgb(0, 0, 0)' stroke-miterlimit='10' pointer-events='all'/></g></svg>"},
    {elementType:"distribution-network",elementFigure:""},

    //Motivation
    {elementType:"stakeholder",elementFigure:"<svg width='35' height='22'><g transform=translate(2,0)><path d='M 12 9 L 3 9 C 1.34 9 0 10.57 0 12.5 C 0 14.43 1.34 16 3 16 L 12 16' fill='#ccccff' stroke='rgb(0, 0, 0)' stroke-miterlimit='10' pointer-events='all'/><ellipse cx='12' cy='12.5' rx='3' ry='3.5' fill='#ccccff' stroke='rgb(0, 0, 0)' pointer-events='all'/></g></svg>"},
    {elementType:"driver",elementFigure:"<svg width='35' height='22'><g><ellipse cx='7.5' cy='7.5' rx='6' ry='6' fill='#ccccff' stroke='rgb(0, 0, 0)' pointer-events='all'/><path d='M -10 7.5 L 15 7.5 M 7.5 0 L 7.5 15 M 2.18 2.17 L 12.82 12.82 M 2.18 12.82 L 12.82 2.17' fill='none' stroke='rgb(0, 0, 0)' stroke-miterlimit='10' pointer-events='all'/><ellipse cx='7.5' cy='7.5' rx='2.25' ry='2.25' fill='rgb(0, 0, 0)' stroke='rgb(0, 0, 0)' pointer-events='all'/></g></svg>"},
    {elementType:"assessment",elementFigure:"<svg width='35' height='22'><defs/><g transform='translate(3,4)'><ellipse cx='9' cy='5' rx='6' ry='6' fill='#ccccff' stroke='rgb(0, 0, 0)' pointer-events='all' /><path d='M 0 15 L 4.8 10.2' fill='none' stroke='rgb(0, 0, 0)' stroke-miterlimit='10' pointer-events='all' /></g></svg>"},
    {elementType:"goal",elementFigure:"<svg width='35' height='22'<g transform='translate(2,1)'><ellipse cx='7.5' cy='7.5' rx='7.5' ry='7.5' fill='#ccccff' stroke='rgb(0, 0, 0)' pointer-events='all'/><ellipse cx='7.5' cy='7.5' rx='5.25' ry='5.25' fill='#ccccff' stroke='rgb(0, 0, 0)' pointer-events='all'/><ellipse cx='7.5' cy='7.5' rx='3' ry='3' fill='rgb(0, 0, 0)' stroke='rgb(0, 0, 0)' pointer-events='all'/></g></svg>"},
    {elementType:"outcome",elementFigure:"<svg width='35' height='22'><g transform='translate(-128,-1)'><ellipse cx='136' cy='14' rx='6' ry='6' fill='#ccccff' stroke='rgb(0, 0, 0)' pointer-events='all'/><ellipse cx='136' cy='14' rx='3.75' ry='3.75' fill='#ccccff' stroke='rgb(0, 0, 0)' pointer-events='all'/><ellipse cx='136' cy='14' rx='1.5' ry='1.5' fill='none' stroke='rgb(0, 0, 0)' pointer-events='all'/><path d='M 136 14 L 143.5 6.5 M 136.3 11 L 136 14 L 139 13.7 M 142 5 L 141.25 8.75 L 145 8' fill='#ccccff' stroke='rgb(0, 0, 0)' stroke-miterlimit='10' pointer-events='all'/></g></svg>"},
    {elementType:"principle",elementFigure:"<svg width='35' height='22'><g transform='translate(2,2)'><path d='M 0.75 0.75 C 5.21 -0.14 9.79 -0.14 14.25 0.75 C 15.14 5.21 15.14 9.79 14.25 14.25 C 9.79 15.14 5.21 15.14 0.75 14.25 C -0.14 9.79 -0.14 5.21 0.75 0.75 Z' fill='#ccccff' stroke='rgb(0, 0, 0)' stroke-miterlimit='10' pointer-events='all'/><path d='M 6.75 10.5 L 6.3 2.25 L 8.7 2.25 L 8.25 10.5 Z' fill='rgb(0, 0, 0)' stroke='none' pointer-events='all'/><rect x='6.75' y='11.25' width='1.5' height='1.5' fill='rgb(0, 0, 0)' stroke='none' pointer-events='all'/></g></svg>"},
    {elementType:"requirement",elementFigure:"<svg width='35' height='22'><g transform='translate(2,0)'><path d='M 3.75 9 L 15 9 L 11.25 16 L 0 16 Z' fill='#ccccff' stroke='rgb(0, 0, 0)' stroke-miterlimit='10' pointer-events='all'/></g></svg>"},
    {elementType:"constraint",elementFigure:"<svg width='35' height='22'><g><path d='M 9 5 L 20.25 5 L 16.5 12 L 5.25 12 Z M 12.75 5 L 9 12' fill='#ccccff' stroke='rgb(0, 0, 0)' stroke-miterlimit='10' pointer-events='all'/></g></svg>"},
    {elementType:"meaning",elementFigure:"<svg width='35' height='22'><g transform='scale(.13,.25)'><path d='M 37.5 18.75 C 7.5 18.75 0 37.5 24 41.25 C 0 49.5 27 67.5 46.5 60 C 60 75 105 75 120 60 C 150 60 150 45 131.25 37.5 C 150 22.5 120 7.5 93.75 15 C 75 3.75 45 3.75 37.5 18.75 Z' fill='#ccccff' stroke='rgb(0, 0, 0)' stroke-miterlimit='10' pointer-events='all'/></g></svg>"},
    {elementType:"value",elementFigure:"<svg width='35' height='22'><g transform='scale(.13,.18)'><ellipse cx='75' cy='37.5' rx='75' ry='37.5' fill='#ccccff' stroke='rgb(0, 0, 0)' pointer-events='all'/></g></svg>"},

    //Implementation & Migration
    {elementType:"work-package",elementFigure:"<svg width='35' height='22'><g transform='scale(.13,.18)'><rect x='0' y='0' width='150' height='75' rx='10' ry='10' fill='#ffe0e0' stroke='rgb(0, 0, 0)' pointer-events='all'/></g></svg>"},
    {elementType:"deliverable",elementFigure:"<svg width='35' height='22'><g transform='scale(.13,.25)'><path d='M 0 0 L 150 0 L 150 51 C 140.13 46.97 126.61 44.7 112.5 44.7 C 98.39 44.7 84.87 46.97 75 51 C 65.13 55.03 51.61 57.3 37.5 57.3 C 23.39 57.3 9.87 55.03 0 51 Z' fill='#ffe0e0' stroke='rgb(0, 0, 0)' stroke-miterlimit='10' pointer-events='all'/></g></svg>"},
    {elementType:"implementation-event",elementFigure:"<svg width='35' height='22'><g><path d='M 10.5 3 C 12.99 3 15 5.01 15 7.5 C 15 9.99 12.99 12 10.5 12 L 0 12 L 4.5 7.5 L 0 3 Z' fill='#ffe0e0' stroke='rgb(0, 0, 0)' stroke-miterlimit='10' pointer-events='all'/></g></svg>"},
    {elementType:"plateau",elementFigure:"<svg width='35' height='22'><g transform='translate(14,0)'><rect x='-4' y='10' width='9' height='3' fill='rgb(0, 0, 0)' stroke='none' pointer-events='all'/><rect x='-7' y='16' width='9' height='3' fill='rgb(0, 0, 0)' stroke='none' pointer-events='all'/><rect x='-10' y='22' width='9' height='3' fill='rgb(0, 0, 0)' stroke='none' pointer-events='all'/></g></svg>"},
    {elementType:"gap",elementFigure:"<svg width='35' height='22'><g transform='translate(-129,0)'><ellipse cx='137.5' cy='12.5' rx='5.25' ry='5.5' fill='#ffe0e0' stroke='rgb(0, 0, 0)' pointer-events='all'/><path d='M 130 10.85 L 145 10.85 M 130 14.15 L 145 14.15' fill='#e0ffe0' stroke='rgb(0, 0, 0)' stroke-miterlimit='10' pointer-events='all'/></g></svg>"},

    //Other
    {elementType:"location",elementFigure:"<svg width='35' height='22'><g transform='translate(0,1)'><path d='M 7.5 15 C 7.51 12.72 6.91 10.79 6.1 10.5 C 4.03 9.55 2.8 7.13 3.13 4.63 C 3.47 2.13 5.27 0.22 7.5 0 C 9.73 0.22 11.53 2.13 11.87 4.63 C 12.2 7.13 10.97 9.55 8.9 10.5 C 8.09 10.79 7.49 12.72 7.5 15' fill='#ffb973' stroke='rgb(0, 0, 0)' stroke-miterlimit='10' pointer-events='all'/></g></svg>"}
];





//==========================FUNCTION LIBRARY=========================
//Function to encond a raw string to a HTML compatible string 
function encodeHTML(rawString){
    return rawString.replace(/[\u00A0-\u9999<>\&]/gim,function(i){
        return '&#' + i.charCodeAt(0) + ';';
    });
}


//Fuction to search a given element's layer within the Archimate framework
function getElementLayer(element){
    if(_impAndMigElements.find(e=>e==element.type)){return 1;}
    if(_motivationElements.find(e=>e==element.type)){return 1;}
    if(_strategyElements.find(e=>e==element.type)){return 1;}
    if(_businessElements.find(e=>e==element.type)){return 3;}
    if(_applicationElements.find(e=>e==element.type)){return 4;}
    if(_technologyElements.find(e=>e==element.type)){return 5;}
    if(_physicalElements.find(e=>e==element.type)){return 5;}

}


//Function to get the Archimate's standard color on a given element (colors are aproximate to standard)
function getElementColor(element){
    if(_motivationElements.find(e=>e==element.type)){return "#ccccff";}
    if(_strategyElements.find(e=>e==element.type)){return "#f5deaa";}
    if(_businessElements.find(e=>e==element.type)){return "#ffffb5";}
    if(_applicationElements.find(e=>e==element.type)){return "#b5ffff";}
    if(_technologyElements.find(e=>e==element.type)){return "#c9e7b7";}
    if(_physicalElements.find(e=>e==element.type)){return "#c9e7b7";}
    if(_impAndMigElements.find(e=>e==element.type)){return "#ffe0e0";}
}

//Function to get an element's Archimate symbol
function getElementSymbol(element){
     return _archimateFigures.find(e=>e.elementType==element.type).elementFigure;
}


//Function to compare the current element's layer vs target element's layer and see if the target is an upper layer within the Archumate framework
function isTargetUpperLayer(currentElement,targetElement){
    var currentElementLayer=getElementLayer(currentElement);
    var targetElementLayer=getElementLayer(targetElement);

    return targetElementLayer<currentElementLayer;  //TODO: Change the order so operator does what function name indicates
}


//Function to know if there's an element propertyto filter by
function passesPropertyValidation(element){
    if(_propertyFilter!=""){
        return $(element).prop(_propertyFilter)==null ? false : $(element).prop(_propertyFilter).toLowerCase()=="yes";
    }
    else{
        return true;
    }
}


//Recursive function to search for the Target Node starting from a given element
function searchForTarget(element, path, _matchingPaths){
    
    //Add current element to the path
    path.push({name:element.name,type:element.type,ID:element.id});

    //If the element matches the Target node, add the current path to the _matchingPaths list
    if(element.type==_targetNode){
        _matchingPaths.push(path.slice());
    }

    //If recursive iteration is too deep then truncate it
    if(path.length>=_deepLevelLimit){
        if(_verboseLogs) console.log("... recursive iteration too deep, truncating ...");
        return;
    }

    //Otherwise, recursively search for the Target node starting from each of the element's relationship's targets (if target passes validations)
    $(element).outRels().forEach(function(relationship){
        if((!path.find(e=>e.name==relationship.getTarget().name))                                           //Make sure we don't make circular reference back to an existing element in the path
            && (relationship.getTarget().type!=_sourceNode)                                                 //Prevent from going back in hierarchy by getting into the Source node.  TODO:See,s redundant
            && (relationship.type!="specialization-relationship")                                           //Prevent path deviation by going to a "parent", in this case outgoing inheritance
            && (relationship.type!="influence-relationship")                                                //Ignoring Influence relationships
            && (!isTargetUpperLayer(element,relationship.getTarget()))){                                    //Prevent from going into an upper layer in Archimate's framwework
                if(_verboseLogs) console.log("Looking from " + element.name + " into " + relationship.getTarget().name);
                searchForTarget(relationship.getTarget(),path,_matchingPaths);
        }
    });

    //Some relationships are considered as inRels, so need to check those too.  Either because of user setting up relationships in reverse order, or because some are reverse by nature
    $(element).inRels().forEach(function(relationship){
        if((!path.find(e=>e.name==relationship.getSource().name))                                           //Make sure we don't make circular reference back to an existing element in the path
            && (relationship.getSource().type!=_sourceNode)                                                 //Prevent from going back in hierarchy by getting into the Source node.  TODO:See,s redundant
            && (relationship.type!="composition-relationship")                                              //Prevent path deviation by going to a "parent", in this case incoming composition
            && (relationship.type!="assignment-relationship")                                               //Prevent path deviation by going to a "parent", in this case incoming assignment
            && (relationship.type!="aggregation-relationship")                                              //Prevent path deviation by going to a "parent", in this case incoming aggregate
            && (relationship.type!="influence-relationship")                                                //Ignoring Influence relationships
            && (!isTargetUpperLayer(element,relationship.getSource()))){                                    //Prevent from going into an upper layer in Archimate's framwework
                if(_verboseLogs) console.log("Looking from " + element.name + " into " + relationship.getSource().name);
                searchForTarget(relationship.getSource(),path,_matchingPaths);
        }
    });

    //Remove the current element from the path before returning
    path.pop();
}

//Function to construct a relationship matrix of indirect relationships between origin and destination elements based on the relationship paths found in previous steps
function generateRelationshipMatrix(pathsData){
    var rowElements= [];
    var colElements= [];

    if(_verboseLogs) console.log("...preparing row and column headers...");
    
    //Prepare a unique set of rows and columns.  Rows will always be the first element in the path and columns will always be the last element in the path (theoretically this will correspond to the source element and target elements defined in the global parameters)
    pathsData.forEach(function(path){
        if(!rowElements.find(e=>e.ID==Object.values(path)[0].ID)){rowElements.push(Object.values(path)[0]);}
        if(!colElements.find(e=>e.ID==Object.values(path)[Object.values(path).length-1].ID)){colElements.push(Object.values(path)[Object.values(path).length-1]);}
    });

   if(_verboseLogs){ 
        console.log("Showing contents of relationship matrix....");
        console.log("Rows...")
        for (i = 0; i < rowElements.length; i++)
            console.log((i+1) + ": " + JSON.stringify(rowElements[i]));
        console.log("Cols...");
        for (i = 0; i < colElements.length; i++)
            console.log((i+1) + ": " + JSON.stringify(colElements[i])); 
    }

    //Prepare the matrix
    var matrix = Array.from({ length: rowElements.length+1 }, () =>
        Array.from({ length: colElements.length+1 }, () => '')
    );


    //Fill the matrix headers
    matrix[0][0]="";  //First column & row should be blank
    
    for (c = 0; c < colElements.length; c++){
        matrix[0][c+1]=colElements[c];
    }
    for (r = 0; r < rowElements.length; r++){
        matrix[r+1][0]=rowElements[r];
    }

    //Fill the matrix
    for (r = 0; r < rowElements.length; r++){
        for (c = 0; c < colElements.length; c++){
                _matchingPaths.forEach(function(path){
                    // console.log(`Comparing path...             ${Object.values(path)[0].name} & ${Object.values(path)[Object.values(path).length-1].name}`);
                    // console.log(`Vs matrix headers...       ${rowElements[r].name}            & ${colElements[c].name}`)
                    // console.log("==========================================================================");
                    if(Object.values(path)[0].ID==rowElements[r].ID && Object.values(path)[Object.values(path).length-1].ID==colElements[c].ID){matrix[r+1][c+1]="X";}
            });
        }
    }

    if(_verboseLogs){
        console.log("Matrix results...");
        console.log(JSON.stringify(matrix));
    }
    
    return matrix;
}


//Function to write all the matching paths to a file
function write_matchingPathsToFile(_matchingPaths){
    var filePath = window.promptSaveFile();
    var writer = new java.io.FileWriter(file);
    writer.write("Path\n");
    console.log("\nHere are the resulting paths ...\n");
    _matchingPaths.forEach(function(path){
        var row="";
        path.forEach(function(elementName){
            row+=elementName + ",";
        });
    console.log("row");
    writer.write(row.substring(0,row.length-1) + "\n");
    });
    writer.close();
}


//Function to write all the matching paths and relationship matrix to a HTML file
function write_matchingPathsToHTML(matchingPaths,matrix){
    var resText="";
    var classNamePlaceholder="";
    var filePath = window.promptSaveFile({
        title: "Save Report File",
        filterExtensions: ["*.html"],
        fileName: "EndToEndTraceabilityReport"
    });

    if(filePath != null) {

        var resText=`
<!DOCTYPE html>
<html>
<head>
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-9ndCyUaIbzAi2FUVXJi0CjmCapSmO7SnpJef0486qhLnuZ2cdeRhO02iuK6FUUVM" crossorigin="anonymous">
<style>
.round-cell { border:1px solid black; border-radius:3px;}
.cell-header {font-size:xx-small;font-style:italic;}
</style>
</head>
<body>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js" integrity="sha384-geWF76RCwLtnZ8qwWowPQNguL3RmwHVBC9FhGdlKrxdiJJigb/j/68SIy3Te4Bkz" crossorigin="anonymous"></script>
<script>
    function toggleCellVisibility(checkFlag){
            const cells=document.getElementsByClassName("middleCell");

            Array.from(cells).forEach(function(cell){
                    if(checkFlag){cell.style.display="";}
                    else {cell.style.display="none";}
            });
    }

    function toggleFigureVisibility(checkFlag){
        const figures=document.getElementsByClassName("archiFigure");

        Array.from(figures).forEach(function(figure){
                if(checkFlag){figure.style.display="";}
                else {figure.style.display="none";}
        });
}
</script>
<nav class="navbar navbar-expand-lg bg-body-tertiary bg-secondary-subtle">
  <div class="container-fluid">
    <a class="navbar-brand" href="#">End to End Traceability Report</a>
  </div>
</nav>
<div>&nbsp;</div>
<div class="d-flex flex-row">
<div class="p-2">
        FROM:<span style='font-style:italic'>${_sourceNode}</span>&nbsp;&nbsp;TO:<span style='font-style:italic'>${_targetNode}</span>
</div>
    <div class="p-2">
        <div class='form-check form-switch'>
            <input class='form-check-input' type='checkbox' role='switch' id='flexSwitchCheckChecked2' checked='true' onclick='toggleFigureVisibility(this.checked)'/>
            <label class='form-check-label' for='flexSwitchCheckChecked2'>Show figures</label>
        </div>
    </div>
</div>
<ul class="nav nav-tabs" id="tab1" role="tablist">
    <li class="nav-item" role="presentation">
        <button class="nav-link active" id="e2e-tab" data-bs-toggle="tab" data-bs-target="#e2e-tab-pane" type="button" role="tab" aria-controls="e2e-tab-pane" aria-selected="true">End to End Traceability</button>
    </li>
    <li class="nav-item" role="presentation">
        <button class="nav-link" id="matrix-tab" data-bs-toggle="tab" data-bs-target="#matrix-tab-pane" type="button" role="tab" aria-controls="matrix-tab-pane" aria-selected="true">Traceability Matrix</button>
    </li>
</ul>
<div class="tab-content" id="tabContent1">
<div class="tab-pane fade show active" id="e2e-tab-pane" role="tabpanel" aria-labelledby="e2etab" tabindex="0">
    <div class="d-flex flex-row">
        <div class="p-2">
                <div class='form-check form-switch'>
                    <input class='form-check-input' type='checkbox' role='switch' id='flexSwitchCheckChecked' checked='true' onclick='toggleCellVisibility(this.checked)'/>
                    <label class='form-check-label' for='flexSwitchCheckChecked'>Show intermediary elements</label>&nbsp;&nbsp;
                </div>
            </div>
    </div>
    <div>&nbsp;</div>
    <table style='width:100%'>`;
        matchingPaths.forEach(function(path){
            resText+="<tr>\n";
            path.forEach((pathElement,index)=>{
                if(index===0 || index>=path.length-1) {classNamePlaceholder="";}
                else {classNamePlaceholder="middleCell";}
                resText+=`<td title='${pathElement.ID}' bgcolor='${getElementColor(pathElement)}' class='round-cell ${classNamePlaceholder}'>
                    <div class="clearfix">
                        <div class="float-start cell-header">${pathElement.type}</div>
                        <div class="float-end archiFigure">${getElementSymbol(pathElement)}</div>
                    </div>
                    ${encodeHTML(pathElement.name)}
                </td>`;
            });
            resText+="</tr>\n";
        });
        resText+=`</table>
        </div>
        <div class="tab-pane fade" id="matrix-tab-pane" role="tabpanel" aria-labelledby="matrix-tab" tabindex="0"> 
        <div>&nbsp;</div>
        <table style='width:100%'>`;
        for (r = 0; r < matrix.length; r++){
            resText+="<tr>"
            for (c = 0; c < matrix[0].length; c++){
                    if(r==0 && c==0){ resText+="<td></td>";}        //Blank first col & row
                    else if(r==0 || c==0){
                        resText+=`<td title='${matrix[r][c].ID}' bgcolor='${getElementColor(matrix[r][c])}' class="round-cell">                    
                                    <div class="clearfix">
                                        <div class="float-start cell-header">${matrix[r][c].type}</div>
                                        <div class="float-end archiFigure">${getElementSymbol(matrix[r][c])}</div>
                                    </div>
                                    ${encodeHTML(matrix[r][c].name)}
                                </td>`;} //Print out the header
                    else {resText+=`<td class="round-cell">${matrix[r][c]}</td>`;}     //Print out the matrix value
                };
            resText+="</tr>";
        }
        resText+=`</table>
</div>
</div>
</body>
</html>`;



        try {
            $.fs.writeFile(filePath, resText);
        }
        catch(err) {
            console.error(err);
        }
    
        if(_openInInternalBrowser){
            var browser = Browser.open("file:///" + filePath, "End To End Traceability Report");
        }

        if(_showHTMLInLog) console.log(resText);
    }
}


//==========================MAIN CODE=========================
console.log("Starting script...\n");
console.log("Creating relationship paths...\n");

if(_verboseLogs) console.log("... getting initial batch of source elements of type:"+_sourceNode+" \n");
$(_sourceNode).each(function(element){
    //Filter by element property if set
    if(passesPropertyValidation(element)){
        searchForTarget(element,[],_matchingPaths);
    }
});

if(_verboseLogs){
    console.log("... done going through source elements!\n");
    console.log("\nHere are the resulting paths ...\n");
    console.log(JSON.stringify(_matchingPaths) + "\n");
}

console.log("Creating relationship matrix...\n");
//Generate the relationship matrix
_matrix=generateRelationshipMatrix(_matchingPaths);

console.log("Creating HTML...\n");
//Write paths to HTML file
write_matchingPathsToHTML(_matchingPaths,_matrix);

//Write matrix to HTML file
//write_relationshipMatrixToHTML(_matrix);
console.log("\n... done!");
